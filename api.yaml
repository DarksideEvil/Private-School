paths:
  # Users

  # LOGIN
  /api/users/login:
    post:
      summary: Returns generated token for access to the system
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Success for access
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  token:
                    type: string
        400:
          description: Bad Request, expected proper credentials from user
        401:
          description: The client lacks proper authentication credentials or has provided invalid credentials
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # ADD
  /api/users/register:
    post:
      security:
        - bearerAuth: []
      summary: Returns newly created user
      tags:
        - Users
      x-roles:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: New user created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # GET ALL
  /api/users:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the users
      tags:
        - Users
      x-roles:
        - admin
      responses:
        200:
          description: Success getting list of the users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # GET ONE
  /api/users/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Returns specified user
      tags:
        - Users
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string user identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Success to getting specified user based on user id
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/User"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request

    patch:
      security:
        - bearerAuth: []
      summary: Returns updated user
      tags:
        - Users
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string user identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: Updated user credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request

    delete:
      security:
        - bearerAuth: []
      summary: Returns deleted user credentials
      tags:
        - Users
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string user identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Specified user successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request

  # Pupils

  # ADD
  /api/pupils/register:
    post:
      security:
        - bearerAuth: []
      summary: Returns newly created pupil
      tags:
        - Pupils
      x-roles:
        - admin
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Pupil"
      responses:
        201:
          description: New pupil created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pupil"
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # GET
  /api/pupils/bygroup/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Returns the pupils of the specified group
      tags:
        - Pupils
      x-roles:
        - admin
        - boss
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string group identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Success getting list of pupils of group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pupil"
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # GET ALL
  /api/pupils:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the pupils
      tags:
        - Pupils
      x-roles:
        - admin
        - boss
      responses:
        200:
          description: Success getting list of the pupils
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pupil"
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  /api/pupils/{id}:
    # GET ONE
    get:
      security:
        - bearerAuth: []
      summary: Returns specified pupil
      tags:
        - Pupils
      x-roles:
        - admin
        - boss
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string pupil identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Success to getting specified pupil based on pupil id
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Pupil"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
    # EDIT ONE
    patch:
      security:
        - bearerAuth: []
      summary: Returns updated pupil
      tags:
        - Pupils
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string pupil identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                parent:
                  type: object
                  properties:
                    fullname:
                      type: string
                    phone:
                      type: string
                img:
                  type: string
                  format: binary
                phone:
                  type: string
                address:
                  type: string
                password:
                  type: string
                birthCertificate:
                  type: string
                group:
                  type: string
      responses:
        200:
          description: Updated pupil credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pupil"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
    # DELETE ONE
    delete:
      security:
        - bearerAuth: []
      summary: Returns deleted pupil credentials
      tags:
        - Pupils
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string pupil identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Specified pupil successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pupil"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request

  # Groups

  /api/groups:
    # ADD
    post:
      security:
        - bearerAuth: []
      summary: Returns newly created group
      tags:
        - Groups
      x-roles:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        201:
          description: New group created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
    # GET ALL
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the group
      tags:
        - Groups
      x-roles:
        - admin
        - boss
      responses:
        200:
          description: Success getting list of the group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pupil"
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # GET ONE
  /api/groups/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Returns specified group
      tags:
        - Groups
      x-roles:
        - admin
        - boss
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string group identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Success to getting specified group based on group id
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Group"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
    # EDIT ONE
    patch:
      security:
        - bearerAuth: []
      summary: Returns updated group
      tags:
        - Groups
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string group identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Updated group credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
    # DELETE ONE
    delete:
      security:
        - bearerAuth: []
      summary: Returns deleted group credentials
      tags:
        - Groups
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string group identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Specified group successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request

  # Checkouts

  # ADD
  /api/checkouts/checkout/{id}:
    post:
      security:
        - bearerAuth: []
      summary: Returns just recorded checkout
      tags:
        - Checkouts
      x-roles:
        - admin
        - device
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string pupil identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Checkout recorded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # GET
  /api/checkouts/todayattendance?limit&page&startDate&endDate&group:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the today's or specified date and all group's or specified group's checkouts
      tags:
        - Checkouts
      x-roles:
        - admin
      parameters:
        - in: query
          name: limit
          description: Specify limit number to show how many checkouts on each page
          required: false
          schema:
            type: number
            required: false
            description: Any integer value
        - in: query
          name: page
          description: Specify page number to show checkouts
          required: false
          schema:
            type: number
            required: false
            description: Any integer value
        - in: query
          name: startDate
          description: Specify date like "year-month-day"
          required: false
          schema:
            type: string
            required: false
            description: string date format yyy-mm-dd
        - in: query
          name: endDate
          description: Specify date like "year-month-day"
          required: false
          schema:
            type: string
            required: false
            description: string date format yyy-mm-dd
        - in: query
          name: group
          description: Specify hexadecimal string group identifier
          required: false
          schema:
            type: string
            required: false
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Success getting list of the checkouts (by default today)
          content:
            application/json:
              schema:
                type: array
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # GET
  /api/checkouts/groupattendances?group&month:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the specified date and group's reports
      tags:
        - Checkouts
      x-roles:
        - admin
        - boss
      parameters:
        - in: query
          name: group
          description: Specify hexadecimal string group identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
        - in: query
          name: month
          description: Specify string date "year-month"
          required: true
          schema:
            type: string
            required: true
            description: YYYY-MM format
      responses:
        200:
          description: Success getting list of the specified date and group's reports
          content:
            application/json:
              schema:
                type: array
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # GET ALL
  /api/checkouts:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the checkout
      tags:
        - Checkouts
      x-roles:
        - admin
      responses:
        200:
          description: Success getting list of the checkout
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pupil"
        403:
          description: Access to the requested resource is forbidden
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
  # GET ONE
  /api/checkouts/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Returns specified checkout
      tags:
        - Checkouts
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string checkout identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Success to getting specified checkout based on checkout id
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Checkout"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
    # EDIT ONE
    patch:
      security:
        - bearerAuth: []
      summary: Returns updated checkout
      tags:
        - Checkouts
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string pupil identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkIn:
                  type: string
                checkOut:
                  type: string
      responses:
        200:
          description: Updated checkout credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
    # DELETE ONE
    delete:
      security:
        - bearerAuth: []
      summary: Returns deleted checkout credentials
      tags:
        - Checkouts
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string checkout identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        200:
          description: Specified checkout successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request
