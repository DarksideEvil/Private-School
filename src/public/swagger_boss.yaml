---
openapi: 3.0.0
info:
  title: Boss API
  version: 1.0.0
  description: API documentation for boss role
paths:
  /api/users/login:
    post:
      summary: Returns generated token for access to the system
      tags:
        - Login
      # security:
      #   - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Success for access
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  token:
                    type: string
        "400":
          description: Bad Request, expected proper credentials from user
        "401":
          description:
            The client lacks proper authentication credentials or has provided
            invalid credentials
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

  /api/users:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the users
      tags:
        - Users
      x-roles:
        - admin
      responses:
        "200":
          description: Success getting list of the users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "403":
          description: Access to the requested resource is forbidden
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

  /api/users/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Returns specified user
      tags:
        - Users
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string user identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        "200":
          description: Success to getting specified user based on user id
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

  /api/pupils/bygroup/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Returns the pupils of the specified group
      tags:
        - Pupils
      x-roles:
        - admin
        - boss
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string group identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        "200":
          description: Success getting list of pupils of group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pupil"
        "403":
          description: Access to the requested resource is forbidden
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

  /api/parents/pupilReports?startDate&endDate:
    get:
      security:
        - bearerAuth: []
      summary: Returns reports of pupil attendace by specified date
      tags:
        - Pupils
      parameters:
        - in: query
          name: startDate
          description: Specify string date "year-month-day"
          required: true
          schema:
            type: string
            required: true
            description: YYYY-MM-DD format
        - in: query
          name: endDate
          description: Specify string date "year-month-day"
          required: true
          schema:
            type: string
            required: true
            description: YYYY-MM-DD format
        - in: query
          name: pupil
          description: Specify hexadecimal string pupil identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        "200":
          description: Success getting attendance reports of pupil by specified date
          content:
            application/json:
              schema:
                type: array
        "403":
          description: Access to the requested resource is forbidden
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

  /api/pupils:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the pupils
      tags:
        - Pupils
      x-roles:
        - admin
        - boss
      responses:
        "200":
          description: Success getting list of the pupils
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pupil"
        "403":
          description: Access to the requested resource is forbidden
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

  /api/pupils/{id}":
    get:
      security:
        - bearerAuth: []
      summary: Returns specified pupil
      tags:
        - Pupils
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string pupil identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        "200":
          description: Success to getting specified pupil based on pupil id
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Pupil"
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

  /api/groups:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the group
      tags:
        - Groups
      x-roles:
        - admin
        - boss
      responses:
        "200":
          description: Success getting list of the group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pupil"
        "403":
          description: Access to the requested resource is forbidden
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

  /api/groups/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Returns specified group
      tags:
        - Groups
      x-roles:
        - admin
        - boss
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string group identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        "200":
          description: Success to getting specified group based on group id
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Group"
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

  /api/checkouts/groupattendances?group&month:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the specified date and group's reports
      tags:
        - Checkouts
      x-roles:
        - admin
        - boss
      parameters:
        - in: query
          name: group
          description: Specify hexadecimal string group identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
        - in: query
          name: month
          description: Specify string date "year-month"
          required: true
          schema:
            type: string
            required: true
            description: YYYY-MM format
      responses:
        "200":
          description: Success getting list of the specified date and group's reports
          content:
            application/json:
              schema:
                type: array
        "403":
          description: Access to the requested resource is forbidden
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request
  /api/checkouts:
    get:
      security:
        - bearerAuth: []
      summary: Returns list of the checkout
      tags:
        - Checkouts
      x-roles:
        - admin
      responses:
        "200":
          description: Success getting list of the checkout
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pupil"
        "403":
          description: Access to the requested resource is forbidden
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request
  /api/checkouts/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Returns specified checkout
      tags:
        - Checkouts
      x-roles:
        - admin
      parameters:
        - in: path
          name: id
          description: Specify hexadecimal string checkout identifier
          required: true
          schema:
            type: string
            required: true
            description: Hexadecimal string generated by mongodb
      responses:
        "200":
          description: Success to getting specified checkout based on checkout id
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Checkout"
        "500":
          description:
            The server encountered an unexpected condition that prevented it
            from fulfilling the request

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - username
        - phone
        - password
        - role
      properties:
        _id:
          type: string
          description: The auto-generated id of the user
          readOnly: true
        username:
          type: string
          description: The username of the user
        phone:
          type: string
          description: The phone of the user
        password:
          type: string
          description: The password of the user
        role:
          type: string
          description: The role of the user
      example:
        username: John Doe
        phone: "901234567"
        password: johndoe123
        role: admin
    Pupil:
      type: object
      required:
        - firstname
        - lastname
        - phone
        - address
        - password
      properties:
        _id:
          type: string
          description: The auto-generated id of the pupil
          readOnly: true
        firstname:
          type: string
          description: The firstname of the pupil
        lastname:
          type: string
          description: The lastname of the pupil
        phone:
          type: string
          description: The phone of the pupil
        parent:
          type: object
          description: Credentials of pupil's parent
          properties:
            fullname:
              type: string
              description: The fullname of the pupil's parent
            phone:
              type: string
              description: The phone of the pupil's parent
        img:
          type: string
          format: binary
          description: The URL of the pupil's image
        address:
          type: string
          description: The address of the pupil
        password:
          type: string
          description: The password of the pupil
        birthCertificate:
          type: string
          description: The birth certificate of the pupil
        group:
          type: string
          description: The group of the pupil
      example:
        firstname: Patrick
        lastname: Bateman
        password: patrickbateman123
        parent:
          fullname: johndoe123
          phone: "991234567"
        img: string
        phone: "951234567"
        address: France, Paris
        birthCertificate: "0192837465"
        group: 6672b9ced3d6fdaf5d15865b
    Group:
      type: object
      required:
        - name
      properties:
        _id:
          type: string
          description: The auto-generated id of the group
          readOnly: true
        name:
          type: string
          description: The name of the group
      example:
        _id: 6672b9ced3d6fdaf5d15865c
        name: 1-A

    Checkout:
      type: object
      required:
        - pupil
      properties:
        _id:
          type: objectId
          description: The auto-generated id of the checkout
          readOnly: true
        pupil:
          type: objectId
          description: Pupil identifier
        checkIn:
          type: string
          description: The time when pupil came to the school
        checkOut:
          type: string
          description: The time when pupil went out from school
      example:
        _id: 6672b9ced3d6fdaf5d15865e
        pupil: 6672b9ced3d6fdaf5d15865f
        checkIn: 2024-06-01 07:33
        checkOut: 2024-06-01 12:42
securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
